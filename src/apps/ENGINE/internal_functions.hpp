#pragma once

#include "token.h"

#include <array>

static constexpr const bool ENABLE_SCRIPT_COMPATIBILITY = true;

long func_rand(long max);

template<typename T>
struct TokenTypeFromType;

template<> struct TokenTypeFromType<long> { static constexpr S_TOKEN_TYPE type = VAR_INTEGER; };

//using IntFuncCall = DATA* (*)(DATA *&pVResult, uint32_t arguments);
using IntFuncCall = DATA* (*)();

struct INTFUNCDESC
{
    uint32_t dwArgsNum;
    const char *pName;
    S_TOKEN_TYPE ReturnType;
};

template<typename ReturnType, typename... Args>
static constexpr auto GenerateFuncDesc(const char* name, ReturnType(*func_ptr)(Args... args)) -> INTFUNCDESC {
    return INTFUNCDESC {
        sizeof...(Args),
        name,
        TokenTypeFromType<ReturnType>::type,
    };
}

static constexpr const std::array<INTFUNCDESC, 103> IntFuncTable {
    // {1, "Rand", VAR_INTEGER},
    GenerateFuncDesc("Rand", &func_rand),
    {0, "frnd", VAR_FLOAT},
    {1, "CreateClass", VAR_OBJECT},
    {2, "CreateEntity", VAR_INTEGER},
    {1, "DeleteClass", TVOID},
    {3, "SetEventHandler", TVOID},
    {0, "ExitProgram", TVOID},
    {0, "GetEventData", UNKNOWN},
    // {1,"Execute",TVOID},
    {0, "Stop", TVOID},
    {0, "SendMessage", VAR_PTR},
    {1, "LoadSegment", VAR_INTEGER},
    {1, "UnloadSegment", TVOID},
    {1, "Trace", TVOID},
    {1, "MakeInt", VAR_INTEGER},
    {1, "MakeFloat", VAR_FLOAT},
    {2,"LayerCreate",TVOID},
    {1,"LayerDelete",TVOID},
    {1, "LayerDeleteContent", TVOID},
    {2, "LayerSetRealize", TVOID},
    {2, "LayerSetExecute", TVOID},
    {2, "LayerSetMessages", TVOID},
    {3, "LayerAddObject", TVOID},
    {2, "LayerDelObject", TVOID},
    {2, "LayerFreeze", TVOID},
    {1, "abs", UNKNOWN},
    {1, "sqrt", VAR_FLOAT},
    {1, "sqr", VAR_FLOAT},
    {1, "sin", VAR_FLOAT},
    {1, "cos", VAR_FLOAT},
    {1, "tan", VAR_FLOAT},
    {1, "atan", VAR_FLOAT},
    {2, "atan2", VAR_FLOAT},
    {1, "asin", VAR_FLOAT},
    {1, "acos", VAR_FLOAT},
    {2, "DeleteAttribute", TVOID},
    {1, "SegmentIsLoaded", VAR_INTEGER},
    {1, "GetAttributesNum", VAR_INTEGER},
    {2, "GetAttributeN", VAR_AREFERENCE},
    {1, "GetAttributeName", VAR_STRING},
    {2, "DelEventHandler", TVOID},
    {1, "EntityUpdate", TVOID},
    {1, "IsEntity", VAR_INTEGER},
    {1, "DumpAttributes", TVOID},
    {1, "sti", VAR_INTEGER},
    {1, "stf", VAR_FLOAT},
    {2, "CheckAttribute", VAR_INTEGER},
    {4, "argb", VAR_INTEGER},
    {0, "DeleteEntities", TVOID},
    {0, "ClearEvents", TVOID},
    {1, "SaveEngineState", TVOID},
    {1, "LoadEngineState", TVOID},
    {0, "Event", TVOID},
    {0, "PostEvent", TVOID},
    {2, "fts", VAR_STRING},
    {0, "ClearPostEvents", TVOID},
    {2, "SetArraySize", TVOID},
    {1, "GetAttributeValue", VAR_STRING},
    {1, "Vartype", VAR_STRING},
    {0, "Breakpoint", TVOID},
    {2, "Pow", VAR_FLOAT},
    {2, "CopyAttributes", TVOID},
    // {2, "GetEntityPointer", VAR_INTEGER},
    {1, "GetEntityNext", VAR_INTEGER},
    {1, "GetEntityName", VAR_STRING},
    {3, "strcut", VAR_STRING},
    {3, "findSubStr", VAR_STRING},
    {1, "ClearRef", TVOID},
    {1, "strlen", VAR_INTEGER},
    {0, "GetDeltaTime", VAR_INTEGER},
    {0, "EventsBreak", TVOID},
    {2, "shl", VAR_INTEGER},
    {2, "shr", VAR_INTEGER},
    {2, "and", VAR_INTEGER},
    {2, "or", VAR_INTEGER},
    {1, "DeleteEntitiesByType", TVOID},
    {1, "CreateControl", VAR_INTEGER},
    {1, "DeleteControl", TVOID},
    {2, "MapControl", TVOID},
    {2, "SetControlFlags", TVOID},
    {1, "ClearEntityAP", TVOID},
    {1, "GetArraySize", VAR_INTEGER},
    {0, "GetTargetPlatform", VAR_STRING},
    {2, "GetEntity", VAR_INTEGER},
    {2, "FindEntity", VAR_INTEGER},
    {1, "FindEntityNext", VAR_INTEGER},
    {2, "GetSymbol", VAR_STRING},
    {2, "IsDigit", VAR_INTEGER},
    {2, "SaveVariable", VAR_INTEGER},
    {2, "LoadVariable", VAR_INTEGER},
    {2, "SetControlTreshold", TVOID},
    {2, "LockControl", TVOID},
    {1, "TestRef", VAR_INTEGER},
    {1, "SetTimeScale", TVOID},
    {1, "CheckFunction", VAR_INTEGER},
    {0, "GetEngineVersion", VAR_INTEGER},

    // Not yet implemented
    {2, "FindClass", VAR_INTEGER},
    {1, "FindClassNext", VAR_INTEGER},
};

static constexpr uint32_t GetInternalFunctionArgumentsNum(uint32_t code) {
    if (code > IntFuncTable.size()) {
        throw std::logic_error("Internal function code cannot can not be greater than the function count");
    }
    return IntFuncTable[code].dwArgsNum;
}

enum FUNCTION_CODE
{
    FUNC_RAND,
    FUNC_FRAND,
    FUNC_CREATE_CLASS,
    FUNC_CREATE_Entity,
    FUNC_DELETE_Entity,
    FUNC_SET_EVENT_HANDLER,
    FUNC_EXIT_PROGRAM,
    FUNC_GET_EVENTDATA,
    // FUNC_EXECUTE,
    FUNC_STOP,
    FUNC_SEND_MESSAGE,
    FUNC_LOAD_SEGMENT,
    FUNC_UNLOAD_SEGMENT,
    FUNC_TRACE,
    FUNC_MAKE_INT,
    FUNC_MAKE_FLOAT,
    FUNC_LAYER_CREATE,
    FUNC_LAYER_DELETE,
    FUNC_LAYER_DELETE_CONTENT,
    FUNC_LAYER_SET_REALIZE,
    FUNC_LAYER_SET_EXECUTE,
    FUNC_LAYER_SET_MESSAGES,
    FUNC_LAYER_ADDOBJECT,
    FUNC_LAYER_DELOBJECT,
    FUNC_LAYER_FREEZE,
    FUNC_ABS,
    FUNC_SQRT,
    FUNC_SQR,
    FUNC_SIN,
    FUNC_COS,
    FUNC_TAN,
    FUNC_ATAN,
    FUNC_ATAN2,
    FUNC_ASIN,
    FUNC_ACOS,
    FUNC_DELETE_ATTRIBUTE,
    FUNC_SEGMENT_IS_LOADED,
    FUNC_GET_ATTRIBUTES_NUM,
    FUNC_GET_ATTRIBUTE_BYN,
    FUNC_GET_ATTRIBUTE_NAME,
    FUNC_DEL_EVENT_HANDLER,
    FUNC_Entity_UPDATE,
    FUNC_IS_Entity_LOADED,
    FUNC_DUMP_ATTRIBUTES,
    FUNC_STI,
    FUNC_STF,
    FUNC_CHECK_ATTRIBUTE,
    FUNC_ARGB,
    FUNC_DELETE_ENTITIES,
    FUNC_CLEAR_EVENTS,
    FUNC_SAVEENGINESTATE,
    FUNC_LOADENGINESTATE,
    FUNC_EVENT,
    FUNC_POSTEVENT,
    FUNC_FTS,
    FUNC_CLEAR_POST_EVENTS,
    FUNC_SET_ARRAY_SIZE,
    FUNC_GET_ATTRIBUTE_VALUE,
    FUNC_VARTYPE,
    FUNC_BREAKPOINT,
    FUNC_POW,
    FUNC_COPYATTRIBUTES,
//    FUNC_GETEntity,
    FUNC_GETEntityNEXT,
    FUNC_GETEntityNAME,
    FUNC_STRCUT,
    FUNC_FINDSUBSTR,
    FUNC_CLEARREF,
    FUNC_STRLEN,
    // FUNC_SETSAVEDATA,
    // FUNC_GETSAVEDATA,
    FUNC_GETDELTATIME,
    FUNC_EVENTSBREAK,
    FUNC_SHL,
    FUNC_SHR,
    FUNC_AND,
    FUNC_OR,
    FUNC_DELETEENTITIESBYTYPE,
    FUNC_CREATE_CONTROL,
    FUNC_DELETE_CONTROL,
    FUNC_MAP_CONTROL,
    FUNC_SET_CONTROL_FLAGS,
    FUNC_CLEAR_Entity_AP,
    FUNC_GET_ARRAY_SIZE,
    FUNC_GETTARGETPLATFORM,
    FUNC_GETENTITY,
    FUNC_FINDENTITY,
    FUNC_FINDENTITYNEXT,
    FUNC_GETSYMBOL,
    FUNC_ISDIGIT,
    FUNC_SAVEVARIABLE,
    FUNC_LOADVARIABLE,
    FUNC_SET_CONTROL_TRESHOLD,
    FUNC_LOCK_CONTROL,
    FUNC_TEST_REF,
    FUNC_SETTIMESCALE,
    FUNC_CHECKFUNCTION,
    FUNC_GETENGINEVERSION,
};
